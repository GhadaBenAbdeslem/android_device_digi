ifeq ($(strip $(TARGET_DEA_BOOTIMAGE)),true)

# KERNEL_NAME is defined in device's BoardConfig.mk
KERNEL_OUT := $(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ
KERNEL_BIN := $(KERNEL_OUT)/arch/$(KERNEL_SRC_ARCH)/boot/$(KERNEL_NAME)

# 1KB blocks for mkfs.vfat
BOOTIMAGE_BLOCKS := $(shell expr $(BOARD_BOOTIMAGE_PARTITION_SIZE) / 1024)

# Boot image included files
BOOTIMAGE_FILES := $(KERNEL_BIN)
BOOTIMAGE_FILES += $(KERNEL_DTBS)
BOOTIMAGE_FILES += $(INSTALLED_BOOTSCRIPT_TARGET)
BOOTIMAGE_FILES += $(INSTALLED_URAMDISK_TARGET)

# Temporary file to create the boot image
BOOTIMAGE_TMPFILE := $(shell mktemp -u $(INSTALLED_BOOTIMAGE_TARGET).XXXXXX)

$(INSTALLED_BOOTIMAGE_TARGET): $(INTERNAL_BOOTIMAGE_FILES) $(KERNEL_DTBS_MAKETARGET) $(INSTALLED_BOOTSCRIPT_TARGET) $(INSTALLED_URAMDISK_TARGET) | $(IMG2SIMG)
	$(call pretty,"Target DEA boot image: $@")
	rm -f $@ && mkfs.vfat -a -n "BOOTIMAGE" -S 512 -C $(BOOTIMAGE_TMPFILE) $(BOOTIMAGE_BLOCKS)
	$(FAT16COPY) $(BOOTIMAGE_TMPFILE) $(BOOTIMAGE_FILES)
ifeq ($(strip $(TARGET_DEA_SPARSE_VFAT_IMAGES)),true)
	$(IMG2SIMG) $(BOOTIMAGE_TMPFILE) $@ && rm -f $(BOOTIMAGE_TMPFILE)
else
	mv $(BOOTIMAGE_TMPFILE) $@
endif

endif
